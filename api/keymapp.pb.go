// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: api/keymapp.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Keyboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FriendlyName string `protobuf:"bytes,2,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	IsConnected  bool   `protobuf:"varint,3,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`
}

func (x *Keyboard) Reset() {
	*x = Keyboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keyboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keyboard) ProtoMessage() {}

func (x *Keyboard) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keyboard.ProtoReflect.Descriptor instead.
func (*Keyboard) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{0}
}

func (x *Keyboard) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Keyboard) GetFriendlyName() string {
	if x != nil {
		return x.FriendlyName
	}
	return ""
}

func (x *Keyboard) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

type ConnectedKeyboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendlyName    string `protobuf:"bytes,1,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	FirmwareVersion string `protobuf:"bytes,2,opt,name=firmware_version,json=firmwareVersion,proto3" json:"firmware_version,omitempty"`
	CurrentLayer    int32  `protobuf:"varint,3,opt,name=current_layer,json=currentLayer,proto3" json:"current_layer,omitempty"`
}

func (x *ConnectedKeyboard) Reset() {
	*x = ConnectedKeyboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedKeyboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedKeyboard) ProtoMessage() {}

func (x *ConnectedKeyboard) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedKeyboard.ProtoReflect.Descriptor instead.
func (*ConnectedKeyboard) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectedKeyboard) GetFriendlyName() string {
	if x != nil {
		return x.FriendlyName
	}
	return ""
}

func (x *ConnectedKeyboard) GetFirmwareVersion() string {
	if x != nil {
		return x.FirmwareVersion
	}
	return ""
}

func (x *ConnectedKeyboard) GetCurrentLayer() int32 {
	if x != nil {
		return x.CurrentLayer
	}
	return 0
}

type GetStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{2}
}

type GetStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeymappVersion    string             `protobuf:"bytes,1,opt,name=keymapp_version,json=keymappVersion,proto3" json:"keymapp_version,omitempty"`
	ConnectedKeyboard *ConnectedKeyboard `protobuf:"bytes,2,opt,name=connected_keyboard,json=connectedKeyboard,proto3" json:"connected_keyboard,omitempty"`
}

func (x *GetStatusReply) Reset() {
	*x = GetStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusReply) ProtoMessage() {}

func (x *GetStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusReply.ProtoReflect.Descriptor instead.
func (*GetStatusReply) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{3}
}

func (x *GetStatusReply) GetKeymappVersion() string {
	if x != nil {
		return x.KeymappVersion
	}
	return ""
}

func (x *GetStatusReply) GetConnectedKeyboard() *ConnectedKeyboard {
	if x != nil {
		return x.ConnectedKeyboard
	}
	return nil
}

type GetKeyboardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetKeyboardsRequest) Reset() {
	*x = GetKeyboardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyboardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyboardsRequest) ProtoMessage() {}

func (x *GetKeyboardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyboardsRequest.ProtoReflect.Descriptor instead.
func (*GetKeyboardsRequest) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{4}
}

type GetKeyboardsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyboards []*Keyboard `protobuf:"bytes,1,rep,name=keyboards,proto3" json:"keyboards,omitempty"`
}

func (x *GetKeyboardsReply) Reset() {
	*x = GetKeyboardsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyboardsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyboardsReply) ProtoMessage() {}

func (x *GetKeyboardsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyboardsReply.ProtoReflect.Descriptor instead.
func (*GetKeyboardsReply) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{5}
}

func (x *GetKeyboardsReply) GetKeyboards() []*Keyboard {
	if x != nil {
		return x.Keyboards
	}
	return nil
}

type ConnectAnyKeyboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConnectAnyKeyboardRequest) Reset() {
	*x = ConnectAnyKeyboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectAnyKeyboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectAnyKeyboardRequest) ProtoMessage() {}

func (x *ConnectAnyKeyboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectAnyKeyboardRequest.ProtoReflect.Descriptor instead.
func (*ConnectAnyKeyboardRequest) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{6}
}

type ConnectKeyboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ConnectKeyboardRequest) Reset() {
	*x = ConnectKeyboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectKeyboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectKeyboardRequest) ProtoMessage() {}

func (x *ConnectKeyboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectKeyboardRequest.ProtoReflect.Descriptor instead.
func (*ConnectKeyboardRequest) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{7}
}

func (x *ConnectKeyboardRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ConnectKeyboardReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ConnectKeyboardReply) Reset() {
	*x = ConnectKeyboardReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectKeyboardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectKeyboardReply) ProtoMessage() {}

func (x *ConnectKeyboardReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectKeyboardReply.ProtoReflect.Descriptor instead.
func (*ConnectKeyboardReply) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{8}
}

func (x *ConnectKeyboardReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DisconnectKeyboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisconnectKeyboardRequest) Reset() {
	*x = DisconnectKeyboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectKeyboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectKeyboardRequest) ProtoMessage() {}

func (x *DisconnectKeyboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectKeyboardRequest.ProtoReflect.Descriptor instead.
func (*DisconnectKeyboardRequest) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{9}
}

type DisconnectKeyboardReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DisconnectKeyboardReply) Reset() {
	*x = DisconnectKeyboardReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectKeyboardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectKeyboardReply) ProtoMessage() {}

func (x *DisconnectKeyboardReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectKeyboardReply.ProtoReflect.Descriptor instead.
func (*DisconnectKeyboardReply) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{10}
}

func (x *DisconnectKeyboardReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SetLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer int32 `protobuf:"varint,1,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *SetLayerRequest) Reset() {
	*x = SetLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLayerRequest) ProtoMessage() {}

func (x *SetLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLayerRequest.ProtoReflect.Descriptor instead.
func (*SetLayerRequest) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{11}
}

func (x *SetLayerRequest) GetLayer() int32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

type SetLayerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SetLayerReply) Reset() {
	*x = SetLayerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLayerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLayerReply) ProtoMessage() {}

func (x *SetLayerReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLayerReply.ProtoReflect.Descriptor instead.
func (*SetLayerReply) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{12}
}

func (x *SetLayerReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SetRGBLedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Led     int32 `protobuf:"varint,1,opt,name=led,proto3" json:"led,omitempty"`
	Red     int32 `protobuf:"varint,2,opt,name=red,proto3" json:"red,omitempty"`
	Green   int32 `protobuf:"varint,3,opt,name=green,proto3" json:"green,omitempty"`
	Blue    int32 `protobuf:"varint,4,opt,name=blue,proto3" json:"blue,omitempty"`
	Sustain int32 `protobuf:"varint,5,opt,name=sustain,proto3" json:"sustain,omitempty"`
}

func (x *SetRGBLedRequest) Reset() {
	*x = SetRGBLedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRGBLedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRGBLedRequest) ProtoMessage() {}

func (x *SetRGBLedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRGBLedRequest.ProtoReflect.Descriptor instead.
func (*SetRGBLedRequest) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{13}
}

func (x *SetRGBLedRequest) GetLed() int32 {
	if x != nil {
		return x.Led
	}
	return 0
}

func (x *SetRGBLedRequest) GetRed() int32 {
	if x != nil {
		return x.Red
	}
	return 0
}

func (x *SetRGBLedRequest) GetGreen() int32 {
	if x != nil {
		return x.Green
	}
	return 0
}

func (x *SetRGBLedRequest) GetBlue() int32 {
	if x != nil {
		return x.Blue
	}
	return 0
}

func (x *SetRGBLedRequest) GetSustain() int32 {
	if x != nil {
		return x.Sustain
	}
	return 0
}

type SetRGBLedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SetRGBLedReply) Reset() {
	*x = SetRGBLedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRGBLedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRGBLedReply) ProtoMessage() {}

func (x *SetRGBLedReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRGBLedReply.ProtoReflect.Descriptor instead.
func (*SetRGBLedReply) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{14}
}

func (x *SetRGBLedReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SetRGBAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Red     int32 `protobuf:"varint,1,opt,name=red,proto3" json:"red,omitempty"`
	Green   int32 `protobuf:"varint,2,opt,name=green,proto3" json:"green,omitempty"`
	Blue    int32 `protobuf:"varint,3,opt,name=blue,proto3" json:"blue,omitempty"`
	Sustain int32 `protobuf:"varint,4,opt,name=sustain,proto3" json:"sustain,omitempty"`
}

func (x *SetRGBAllRequest) Reset() {
	*x = SetRGBAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRGBAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRGBAllRequest) ProtoMessage() {}

func (x *SetRGBAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRGBAllRequest.ProtoReflect.Descriptor instead.
func (*SetRGBAllRequest) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{15}
}

func (x *SetRGBAllRequest) GetRed() int32 {
	if x != nil {
		return x.Red
	}
	return 0
}

func (x *SetRGBAllRequest) GetGreen() int32 {
	if x != nil {
		return x.Green
	}
	return 0
}

func (x *SetRGBAllRequest) GetBlue() int32 {
	if x != nil {
		return x.Blue
	}
	return 0
}

func (x *SetRGBAllRequest) GetSustain() int32 {
	if x != nil {
		return x.Sustain
	}
	return 0
}

type SetRGBAllReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SetRGBAllReply) Reset() {
	*x = SetRGBAllReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRGBAllReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRGBAllReply) ProtoMessage() {}

func (x *SetRGBAllReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRGBAllReply.ProtoReflect.Descriptor instead.
func (*SetRGBAllReply) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{16}
}

func (x *SetRGBAllReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SetStatusLedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Led     int32 `protobuf:"varint,1,opt,name=led,proto3" json:"led,omitempty"`
	On      bool  `protobuf:"varint,2,opt,name=on,proto3" json:"on,omitempty"`
	Sustain int32 `protobuf:"varint,3,opt,name=sustain,proto3" json:"sustain,omitempty"`
}

func (x *SetStatusLedRequest) Reset() {
	*x = SetStatusLedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStatusLedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStatusLedRequest) ProtoMessage() {}

func (x *SetStatusLedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStatusLedRequest.ProtoReflect.Descriptor instead.
func (*SetStatusLedRequest) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{17}
}

func (x *SetStatusLedRequest) GetLed() int32 {
	if x != nil {
		return x.Led
	}
	return 0
}

func (x *SetStatusLedRequest) GetOn() bool {
	if x != nil {
		return x.On
	}
	return false
}

func (x *SetStatusLedRequest) GetSustain() int32 {
	if x != nil {
		return x.Sustain
	}
	return 0
}

type SetStatusLedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SetStatusLedReply) Reset() {
	*x = SetStatusLedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStatusLedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStatusLedReply) ProtoMessage() {}

func (x *SetStatusLedReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStatusLedReply.ProtoReflect.Descriptor instead.
func (*SetStatusLedReply) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{18}
}

func (x *SetStatusLedReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type IncreaseBrightnessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IncreaseBrightnessRequest) Reset() {
	*x = IncreaseBrightnessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncreaseBrightnessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncreaseBrightnessRequest) ProtoMessage() {}

func (x *IncreaseBrightnessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncreaseBrightnessRequest.ProtoReflect.Descriptor instead.
func (*IncreaseBrightnessRequest) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{19}
}

type DecreaseBrightnessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecreaseBrightnessRequest) Reset() {
	*x = DecreaseBrightnessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecreaseBrightnessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecreaseBrightnessRequest) ProtoMessage() {}

func (x *DecreaseBrightnessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecreaseBrightnessRequest.ProtoReflect.Descriptor instead.
func (*DecreaseBrightnessRequest) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{20}
}

type BrightnessUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *BrightnessUpdateReply) Reset() {
	*x = BrightnessUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_keymapp_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrightnessUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrightnessUpdateReply) ProtoMessage() {}

func (x *BrightnessUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_keymapp_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrightnessUpdateReply.ProtoReflect.Descriptor instead.
func (*BrightnessUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_keymapp_proto_rawDescGZIP(), []int{21}
}

func (x *BrightnessUpdateReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_api_keymapp_proto protoreflect.FileDescriptor

var file_api_keymapp_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x69, 0x2f, 0x6b, 0x65, 0x79, 0x6d, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x22, 0x62, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x88, 0x01, 0x0a,
	0x11, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x69, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27,
	0x0a, 0x0f, 0x6b, 0x65, 0x79, 0x6d, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6b, 0x65, 0x79, 0x6d, 0x61, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x11, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x15,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x09, 0x6b, 0x65,
	0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x09, 0x6b, 0x65,
	0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x41, 0x6e, 0x79, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4b,
	0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30,
	0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x1b, 0x0a, 0x19, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4b, 0x65,
	0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x33, 0x0a,
	0x17, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x27, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x29, 0x0a, 0x0d, 0x53,
	0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x7a, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x52, 0x47, 0x42,
	0x4c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67,
	0x72, 0x65, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x22, 0x2a, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x52, 0x47, 0x42, 0x4c, 0x65, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x68,
	0x0a, 0x10, 0x53, 0x65, 0x74, 0x52, 0x47, 0x42, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x22, 0x2a, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x52,
	0x47, 0x42, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x51, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x65, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x22, 0x2d, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61,
	0x73, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x42,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x31, 0x0a, 0x15, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x32, 0xda, 0x06, 0x0a, 0x0f, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x6e,
	0x79, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x79, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x08,
	0x53, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0a, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x65, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x39,
	0x0a, 0x09, 0x53, 0x65, 0x74, 0x52, 0x47, 0x42, 0x4c, 0x65, 0x64, 0x12, 0x15, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x47, 0x42, 0x4c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x47, 0x42, 0x4c,
	0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x09, 0x53, 0x65, 0x74,
	0x52, 0x47, 0x42, 0x41, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74,
	0x52, 0x47, 0x42, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x47, 0x42, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4c, 0x65, 0x64, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x12, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x42, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x12,
	0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65,
	0x73, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73,
	0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e,
	0x65, 0x73, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x42, 0x1c, 0x5a, 0x1a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a,
	0x73, 0x61, 0x2f, 0x6b, 0x65, 0x79, 0x6d, 0x61, 0x70, 0x70, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_keymapp_proto_rawDescOnce sync.Once
	file_api_keymapp_proto_rawDescData = file_api_keymapp_proto_rawDesc
)

func file_api_keymapp_proto_rawDescGZIP() []byte {
	file_api_keymapp_proto_rawDescOnce.Do(func() {
		file_api_keymapp_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_keymapp_proto_rawDescData)
	})
	return file_api_keymapp_proto_rawDescData
}

var file_api_keymapp_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_api_keymapp_proto_goTypes = []any{
	(*Keyboard)(nil),                  // 0: api.Keyboard
	(*ConnectedKeyboard)(nil),         // 1: api.ConnectedKeyboard
	(*GetStatusRequest)(nil),          // 2: api.GetStatusRequest
	(*GetStatusReply)(nil),            // 3: api.GetStatusReply
	(*GetKeyboardsRequest)(nil),       // 4: api.GetKeyboardsRequest
	(*GetKeyboardsReply)(nil),         // 5: api.GetKeyboardsReply
	(*ConnectAnyKeyboardRequest)(nil), // 6: api.ConnectAnyKeyboardRequest
	(*ConnectKeyboardRequest)(nil),    // 7: api.ConnectKeyboardRequest
	(*ConnectKeyboardReply)(nil),      // 8: api.ConnectKeyboardReply
	(*DisconnectKeyboardRequest)(nil), // 9: api.DisconnectKeyboardRequest
	(*DisconnectKeyboardReply)(nil),   // 10: api.DisconnectKeyboardReply
	(*SetLayerRequest)(nil),           // 11: api.SetLayerRequest
	(*SetLayerReply)(nil),             // 12: api.SetLayerReply
	(*SetRGBLedRequest)(nil),          // 13: api.SetRGBLedRequest
	(*SetRGBLedReply)(nil),            // 14: api.SetRGBLedReply
	(*SetRGBAllRequest)(nil),          // 15: api.SetRGBAllRequest
	(*SetRGBAllReply)(nil),            // 16: api.SetRGBAllReply
	(*SetStatusLedRequest)(nil),       // 17: api.SetStatusLedRequest
	(*SetStatusLedReply)(nil),         // 18: api.SetStatusLedReply
	(*IncreaseBrightnessRequest)(nil), // 19: api.IncreaseBrightnessRequest
	(*DecreaseBrightnessRequest)(nil), // 20: api.DecreaseBrightnessRequest
	(*BrightnessUpdateReply)(nil),     // 21: api.BrightnessUpdateReply
}
var file_api_keymapp_proto_depIdxs = []int32{
	1,  // 0: api.GetStatusReply.connected_keyboard:type_name -> api.ConnectedKeyboard
	0,  // 1: api.GetKeyboardsReply.keyboards:type_name -> api.Keyboard
	2,  // 2: api.KeyboardService.GetStatus:input_type -> api.GetStatusRequest
	4,  // 3: api.KeyboardService.GetKeyboards:input_type -> api.GetKeyboardsRequest
	7,  // 4: api.KeyboardService.ConnectKeyboard:input_type -> api.ConnectKeyboardRequest
	6,  // 5: api.KeyboardService.ConnectAnyKeyboard:input_type -> api.ConnectAnyKeyboardRequest
	9,  // 6: api.KeyboardService.DisconnectKeyboard:input_type -> api.DisconnectKeyboardRequest
	11, // 7: api.KeyboardService.SetLayer:input_type -> api.SetLayerRequest
	11, // 8: api.KeyboardService.UnsetLayer:input_type -> api.SetLayerRequest
	13, // 9: api.KeyboardService.SetRGBLed:input_type -> api.SetRGBLedRequest
	15, // 10: api.KeyboardService.SetRGBAll:input_type -> api.SetRGBAllRequest
	17, // 11: api.KeyboardService.SetStatusLed:input_type -> api.SetStatusLedRequest
	19, // 12: api.KeyboardService.IncreaseBrightness:input_type -> api.IncreaseBrightnessRequest
	20, // 13: api.KeyboardService.DecreaseBrightness:input_type -> api.DecreaseBrightnessRequest
	3,  // 14: api.KeyboardService.GetStatus:output_type -> api.GetStatusReply
	5,  // 15: api.KeyboardService.GetKeyboards:output_type -> api.GetKeyboardsReply
	8,  // 16: api.KeyboardService.ConnectKeyboard:output_type -> api.ConnectKeyboardReply
	8,  // 17: api.KeyboardService.ConnectAnyKeyboard:output_type -> api.ConnectKeyboardReply
	10, // 18: api.KeyboardService.DisconnectKeyboard:output_type -> api.DisconnectKeyboardReply
	12, // 19: api.KeyboardService.SetLayer:output_type -> api.SetLayerReply
	12, // 20: api.KeyboardService.UnsetLayer:output_type -> api.SetLayerReply
	14, // 21: api.KeyboardService.SetRGBLed:output_type -> api.SetRGBLedReply
	16, // 22: api.KeyboardService.SetRGBAll:output_type -> api.SetRGBAllReply
	18, // 23: api.KeyboardService.SetStatusLed:output_type -> api.SetStatusLedReply
	21, // 24: api.KeyboardService.IncreaseBrightness:output_type -> api.BrightnessUpdateReply
	21, // 25: api.KeyboardService.DecreaseBrightness:output_type -> api.BrightnessUpdateReply
	14, // [14:26] is the sub-list for method output_type
	2,  // [2:14] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_api_keymapp_proto_init() }
func file_api_keymapp_proto_init() {
	if File_api_keymapp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_keymapp_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Keyboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ConnectedKeyboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetKeyboardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetKeyboardsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ConnectAnyKeyboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ConnectKeyboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ConnectKeyboardReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DisconnectKeyboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DisconnectKeyboardReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SetLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*SetLayerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*SetRGBLedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SetRGBLedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*SetRGBAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*SetRGBAllReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*SetStatusLedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*SetStatusLedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*IncreaseBrightnessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*DecreaseBrightnessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_keymapp_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*BrightnessUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_keymapp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_keymapp_proto_goTypes,
		DependencyIndexes: file_api_keymapp_proto_depIdxs,
		MessageInfos:      file_api_keymapp_proto_msgTypes,
	}.Build()
	File_api_keymapp_proto = out.File
	file_api_keymapp_proto_rawDesc = nil
	file_api_keymapp_proto_goTypes = nil
	file_api_keymapp_proto_depIdxs = nil
}
